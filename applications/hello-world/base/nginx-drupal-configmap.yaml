apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-drupal-config
  namespace: hello-world
  labels:
    app: drupal
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        server {
            listen 80;
            server_name _;
            root /app/drupal/web;
            index index.php index.html;

            # Drupal specific configuration
            location = /favicon.ico {
                log_not_found off;
                access_log off;
            }

            location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
            }

            # Very rarely should these ever be accessed outside of your lan
            location ~* \.(txt|log)$ {
                allow 192.168.0.0/16;
                deny all;
            }

            location ~ \..*/.*\.php$ {
                return 403;
            }

            location ~ ^/sites/.*/private/ {
                return 403;
            }

            # Block access to scripts in site files directory
            location ~ ^/sites/[^/]+/files/.*\.php$ {
                deny all;
            }

            # Allow "Well-Known URIs" as per RFC 5785
            location ~* ^/.well-known/ {
                allow all;
            }

            # Block access to "hidden" files and directories whose names begin with a
            # period. This includes directories used by version control systems such
            # as Subversion or Git to store control files.
            location ~ (^|/)\. {
                return 403;
            }

            location / {
                try_files $uri /index.php?$query_string;
            }

            location @rewrite {
                rewrite ^/(.*)$ /index.php?q=$1;
            }

            # Don't allow direct access to PHP files in the vendor directory.
            location ~ /vendor/.*\.php$ {
                deny all;
                return 404;
            }

            # Protect files and directories from prying eyes.
            location ~* \.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock)|web\.config)$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$ {
                deny all;
                return 404;
            }

            location ~ '\.php$|^/update.php' {
                fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
                # Ensure the php file exists. Mitigates CVE-2019-11043
                try_files $fastcgi_script_name =404;
                # Security note: If you're running a version of PHP older than the
                # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
                # See http://serverfault.com/q/627903/94922 for details.
                include fastcgi_params;
                # Block httpoxy attacks. See https://httpoxy.org/.
                fastcgi_param HTTP_PROXY "";
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
                fastcgi_param QUERY_STRING $query_string;
                fastcgi_intercept_errors on;
                # PHP 5 socket location.
                #fastcgi_pass unix:/var/run/php5-fpm.sock;
                # PHP 7 socket location.
                #fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
                # If php-fpm is running on localhost:9000
                fastcgi_pass 127.0.0.1:9000;
            }

            # Fighting with Styles? This little gem is amazing.
            location ~ ^/sites/.*/files/styles/ {
                try_files $uri @rewrite;
            }

            # Handle private files through Drupal. Private file's path can come
            # with a language prefix.
            location ~ ^(/[a-z\-]+)?/system/files/ {
                try_files $uri /index.php?$query_string;
            }

            # Enforce clean URLs
            # Removes index.php from urls like www.example.com/index.php/my-page --> www.example.com/my-page
            # Could be done with 301 for permanent or other redirect codes.
            if ($request_uri ~* "^(.*/)index\.php/(.*)") {
                return 307 $1$2;
            }
        }
    }
