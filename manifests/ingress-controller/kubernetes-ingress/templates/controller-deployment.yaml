---
# Source: kubernetes-ingress/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy-ingress-kubernetes-ingress
  namespace: haproxy-ingress
  labels:
    app.kubernetes.io/name: kubernetes-ingress
    app.kubernetes.io/instance: haproxy-ingress
    helm.sh/chart: kubernetes-ingress-1.44.5
    app.kubernetes.io/version: "3.1.9"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  minReadySeconds: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-ingress
      app.kubernetes.io/instance: haproxy-ingress
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-ingress
        app.kubernetes.io/instance: haproxy-ingress
    spec:
      enableServiceLinks: true
      serviceAccountName: haproxy-ingress-kubernetes-ingress
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
        runAsUser:  1000
        runAsGroup: 1000
      containers:
        - name: kubernetes-ingress-controller
          image: "haproxytech/kubernetes-ingress:3.1.9"
          imagePullPolicy: IfNotPresent
          args:
          - --default-ssl-certificate=haproxy-ingress/haproxy-ingress-kubernetes-ingress-default-cert
          - --configmap=haproxy-ingress/haproxy-ingress-kubernetes-ingress
          - --http-bind-port=8080
          - --https-bind-port=8443
          - --quic-bind-port=8443
          - --quic-announce-port=443
          - --ingress.class=haproxy
          - --publish-service=haproxy-ingress/haproxy-ingress-kubernetes-ingress
          - --log=info
          - --prometheus
          - --pprof
          securityContext:
            runAsNonRoot: true
            runAsUser:  1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: admin
              containerPort: 6060
              protocol: TCP
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: stat
              containerPort: 1024
              protocol: TCP
            - name: quic
              containerPort: 8443
              protocol: UDP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 1042
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 1042
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /healthz
              port: 1042
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          resources:
            requests:
              cpu: 250m
              memory: 400Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              subPath: tmp
            - name: tmp
              mountPath: /run
              subPath: run
      volumes:
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 64Mi
